# CodeWhisperer pre block. Keep at the top of this file.
[[ -f "${HOME}/Library/Application Support/codewhisperer/shell/zshrc.pre.zsh" ]] && builtin source "${HOME}/Library/Application Support/codewhisperer/shell/zshrc.pre.zsh"
# Path to your oh-my-zsh installation.
export ZSH=~/.oh-my-zsh

# Oh-my-zsh theme
ZSH_THEME="tyler"

plugins=(git macos composer docker docker-compose colorize)

# User configuration
export PATH="/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin"
export LANG=en_US.UTF-8

source $ZSH/oh-my-zsh.sh

# use .localrc for SUPER SECRET stuff that you don't want in your public, versioned repo.
if [[ -a ~/.localrc ]]
then
  source ~/.localrc
fi

# Load nvm
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

autoload -U add-zsh-hook
load-nvmrc() {
  local node_version="$(nvm version)"
  local nvmrc_path="$(nvm_find_nvmrc)"

  if [ -n "$nvmrc_path" ]; then
    local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

    if [ "$nvmrc_node_version" = "N/A" ]; then
      nvm install
    elif [ "$nvmrc_node_version" != "$node_version" ]; then
      nvm use
    fi
  elif [ "$node_version" != "$(nvm version default)" ]; then
    echo "Reverting to nvm default version"
    nvm use default
  fi
}
add-zsh-hook chpwd load-nvmrc
load-nvmrc

export GOPATH=$HOME/dev/go
export PATH=$HOME/dev/go/bin:$PATH
export PATH="$HOME/pear/share/pear:$PATH"
export PATH="$HOME/pear/bin:$PATH"
export PATH="/usr/local/opt/php@7.3/bin:$PATH"
export PATH="/usr/local/opt/php@7.3/sbin:$PATH"
export PATH=/opt/homebrew/bin:$PATH
export DOTNET_ROOT="/opt/homebrew/opt/dotnet/libexec"
export JAVA_HOME=$(/usr/libexec/java_home)
export PATH="$PATH":"$HOME/.pub-cache/bin"
export PATH=$PATH:$HOME/.cargo/bin
export PATH=$HOME/dev/flutter/bin:$PATH

alias dala="mongosh "mongodb+srv://dala-sandbox-cluster.qxndyfg.mongodb.net/dala" --apiVersion 1 --username admin --password BS2UVFDwafpmU0e1"
alias cgo="ssh -i ~/.ssh/GoWebServerKeyPair.pem ec2-user@ec2-3-83-53-204.compute-1.amazonaws.com"
alias pip="pip3.10" 

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/tylerpillay/bin/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/tylerpillay/bin/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/tylerpillay/bin/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/tylerpillay/bin/google-cloud-sdk/completion.zsh.inc'; fi

export OPENSSL_ROOT_DIR=/usr/local/opt/openssl
export PKG_CONFIG_PATH="/usr/local/opt/openssl@1.1/lib/pkgconfig"

autoload -U +X bashcompinit && bashcompinit
complete -o nospace -C /usr/local/bin/terraform terraform

# Added by Amplify CLI binary installer
export PATH="$HOME/.amplify/bin:$PATH"

# Set Homebrew Ruby path
export PATH="/usr/local/opt/ruby/bin:$PATH"
export PATH="/opt/homebrew/opt/ruby/bin:$PATH"

echo "Sourcing .zshrc"


[[ -f "$HOME/fig-export/dotfiles/dotfile.zsh" ]] && builtin source "$HOME/fig-export/dotfiles/dotfile.zsh"

# CodeWhisperer post block. Keep at the bottom of this file.
[[ -f "${HOME}/Library/Application Support/codewhisperer/shell/zshrc.post.zsh" ]] && builtin source "${HOME}/Library/Application Support/codewhisperer/shell/zshrc.post.zsh"
